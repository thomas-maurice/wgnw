// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListNetworksResponse struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListNetworksResponse) Reset()         { *m = ListNetworksResponse{} }
func (m *ListNetworksResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworksResponse) ProtoMessage()    {}
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *ListNetworksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworksResponse.Unmarshal(m, b)
}
func (m *ListNetworksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworksResponse.Marshal(b, m, deterministic)
}
func (m *ListNetworksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworksResponse.Merge(m, src)
}
func (m *ListNetworksResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworksResponse.Size(m)
}
func (m *ListNetworksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworksResponse proto.InternalMessageInfo

func (m *ListNetworksResponse) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type GetNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkRequest) Reset()         { *m = GetNetworkRequest{} }
func (m *GetNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkRequest) ProtoMessage()    {}
func (*GetNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *GetNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkRequest.Unmarshal(m, b)
}
func (m *GetNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkRequest.Merge(m, src)
}
func (m *GetNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkRequest.Size(m)
}
func (m *GetNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkRequest proto.InternalMessageInfo

func (m *GetNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetNetworkResponse struct {
	Network              *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkResponse) Reset()         { *m = GetNetworkResponse{} }
func (m *GetNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkResponse) ProtoMessage()    {}
func (*GetNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *GetNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkResponse.Unmarshal(m, b)
}
func (m *GetNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkResponse.Merge(m, src)
}
func (m *GetNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkResponse.Size(m)
}
func (m *GetNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkResponse proto.InternalMessageInfo

func (m *GetNetworkResponse) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type DeleteNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkRequest) Reset()         { *m = DeleteNetworkRequest{} }
func (m *DeleteNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkRequest) ProtoMessage()    {}
func (*DeleteNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *DeleteNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkRequest.Unmarshal(m, b)
}
func (m *DeleteNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkRequest.Merge(m, src)
}
func (m *DeleteNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkRequest.Size(m)
}
func (m *DeleteNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkRequest proto.InternalMessageInfo

func (m *DeleteNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteNetworkResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkResponse) Reset()         { *m = DeleteNetworkResponse{} }
func (m *DeleteNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkResponse) ProtoMessage()    {}
func (*DeleteNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *DeleteNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkResponse.Unmarshal(m, b)
}
func (m *DeleteNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkResponse.Merge(m, src)
}
func (m *DeleteNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkResponse.Size(m)
}
func (m *DeleteNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkResponse proto.InternalMessageInfo

func (m *DeleteNetworkResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteLeaseRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLeaseRequest) Reset()         { *m = DeleteLeaseRequest{} }
func (m *DeleteLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLeaseRequest) ProtoMessage()    {}
func (*DeleteLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *DeleteLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLeaseRequest.Unmarshal(m, b)
}
func (m *DeleteLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLeaseRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLeaseRequest.Merge(m, src)
}
func (m *DeleteLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLeaseRequest.Size(m)
}
func (m *DeleteLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLeaseRequest proto.InternalMessageInfo

func (m *DeleteLeaseRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type DeleteLeaseResponse struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLeaseResponse) Reset()         { *m = DeleteLeaseResponse{} }
func (m *DeleteLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLeaseResponse) ProtoMessage()    {}
func (*DeleteLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *DeleteLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLeaseResponse.Unmarshal(m, b)
}
func (m *DeleteLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLeaseResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLeaseResponse.Merge(m, src)
}
func (m *DeleteLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLeaseResponse.Size(m)
}
func (m *DeleteLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLeaseResponse proto.InternalMessageInfo

func (m *DeleteLeaseResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Network struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Subnets              []string `protobuf:"bytes,3,rep,name=subnets,proto3" json:"subnets,omitempty"`
	NumSubnets           int32    `protobuf:"varint,4,opt,name=num_subnets,json=numSubnets,proto3" json:"num_subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Network) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *Network) GetNumSubnets() int32 {
	if m != nil {
		return m.NumSubnets
	}
	return 0
}

type CreateNetworkRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Subnets              int32    `protobuf:"varint,3,opt,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNetworkRequest) Reset()         { *m = CreateNetworkRequest{} }
func (m *CreateNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkRequest) ProtoMessage()    {}
func (*CreateNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *CreateNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkRequest.Unmarshal(m, b)
}
func (m *CreateNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkRequest.Marshal(b, m, deterministic)
}
func (m *CreateNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkRequest.Merge(m, src)
}
func (m *CreateNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkRequest.Size(m)
}
func (m *CreateNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkRequest proto.InternalMessageInfo

func (m *CreateNetworkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateNetworkRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateNetworkRequest) GetSubnets() int32 {
	if m != nil {
		return m.Subnets
	}
	return 0
}

type CreateNetworkResponse struct {
	Network              *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNetworkResponse) Reset()         { *m = CreateNetworkResponse{} }
func (m *CreateNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkResponse) ProtoMessage()    {}
func (*CreateNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *CreateNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkResponse.Unmarshal(m, b)
}
func (m *CreateNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkResponse.Marshal(b, m, deterministic)
}
func (m *CreateNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkResponse.Merge(m, src)
}
func (m *CreateNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkResponse.Size(m)
}
func (m *CreateNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkResponse proto.InternalMessageInfo

func (m *CreateNetworkResponse) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type PublicPeer struct {
	// Public IP address that peer is reachable through
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Public port that peer is reachable at
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicPeer) Reset()         { *m = PublicPeer{} }
func (m *PublicPeer) String() string { return proto.CompactTextString(m) }
func (*PublicPeer) ProtoMessage()    {}
func (*PublicPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *PublicPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicPeer.Unmarshal(m, b)
}
func (m *PublicPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicPeer.Marshal(b, m, deterministic)
}
func (m *PublicPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicPeer.Merge(m, src)
}
func (m *PublicPeer) XXX_Size() int {
	return xxx_messageInfo_PublicPeer.Size(m)
}
func (m *PublicPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicPeer.DiscardUnknown(m)
}

var xxx_messageInfo_PublicPeer proto.InternalMessageInfo

func (m *PublicPeer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PublicPeer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Endpoint struct {
	// Public address this peer is reachable at, can be null
	Peer *PublicPeer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	// Public key of the peer
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Networks that are reachable through that peer.
	Networks             []string `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (m *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(m, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetPeer() *PublicPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *Endpoint) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Endpoint) GetNetworks() []string {
	if m != nil {
		return m.Networks
	}
	return nil
}

type NetworkDefinition struct {
	// Name of the network, this maps to a network identifier
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Network range
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// List of endpoints of the network
	Endpoints            []*Endpoint `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NetworkDefinition) Reset()         { *m = NetworkDefinition{} }
func (m *NetworkDefinition) String() string { return proto.CompactTextString(m) }
func (*NetworkDefinition) ProtoMessage()    {}
func (*NetworkDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *NetworkDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkDefinition.Unmarshal(m, b)
}
func (m *NetworkDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkDefinition.Marshal(b, m, deterministic)
}
func (m *NetworkDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDefinition.Merge(m, src)
}
func (m *NetworkDefinition) XXX_Size() int {
	return xxx_messageInfo_NetworkDefinition.Size(m)
}
func (m *NetworkDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDefinition proto.InternalMessageInfo

func (m *NetworkDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkDefinition) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NetworkDefinition) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type AcquireLeaseRequest struct {
	// Node name, should be unique accross the network
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Network onto which register
	NetworkName string `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	// Public key of the endpoint
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// If this is null then the peer is considered to be behind a NAT
	Peer                 *PublicPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AcquireLeaseRequest) Reset()         { *m = AcquireLeaseRequest{} }
func (m *AcquireLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireLeaseRequest) ProtoMessage()    {}
func (*AcquireLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *AcquireLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireLeaseRequest.Unmarshal(m, b)
}
func (m *AcquireLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireLeaseRequest.Marshal(b, m, deterministic)
}
func (m *AcquireLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireLeaseRequest.Merge(m, src)
}
func (m *AcquireLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireLeaseRequest.Size(m)
}
func (m *AcquireLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireLeaseRequest proto.InternalMessageInfo

func (m *AcquireLeaseRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *AcquireLeaseRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *AcquireLeaseRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *AcquireLeaseRequest) GetPeer() *PublicPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type RenewLeaseRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewLeaseRequest) Reset()         { *m = RenewLeaseRequest{} }
func (m *RenewLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*RenewLeaseRequest) ProtoMessage()    {}
func (*RenewLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *RenewLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewLeaseRequest.Unmarshal(m, b)
}
func (m *RenewLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewLeaseRequest.Marshal(b, m, deterministic)
}
func (m *RenewLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewLeaseRequest.Merge(m, src)
}
func (m *RenewLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_RenewLeaseRequest.Size(m)
}
func (m *RenewLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewLeaseRequest proto.InternalMessageInfo

func (m *RenewLeaseRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type RenewLeaseResponse struct {
	Lease                *Lease   `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewLeaseResponse) Reset()         { *m = RenewLeaseResponse{} }
func (m *RenewLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*RenewLeaseResponse) ProtoMessage()    {}
func (*RenewLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *RenewLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewLeaseResponse.Unmarshal(m, b)
}
func (m *RenewLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewLeaseResponse.Marshal(b, m, deterministic)
}
func (m *RenewLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewLeaseResponse.Merge(m, src)
}
func (m *RenewLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_RenewLeaseResponse.Size(m)
}
func (m *RenewLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewLeaseResponse proto.InternalMessageInfo

func (m *RenewLeaseResponse) GetLease() *Lease {
	if m != nil {
		return m.Lease
	}
	return nil
}

type Lease struct {
	IpRange              string   `protobuf:"bytes,1,opt,name=ip_range,json=ipRange,proto3" json:"ip_range,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Expires              int64    `protobuf:"varint,3,opt,name=expires,proto3" json:"expires,omitempty"`
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PublicKey            string   `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Expired              bool     `protobuf:"varint,6,opt,name=expired,proto3" json:"expired,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lease) Reset()         { *m = Lease{} }
func (m *Lease) String() string { return proto.CompactTextString(m) }
func (*Lease) ProtoMessage()    {}
func (*Lease) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *Lease) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lease.Unmarshal(m, b)
}
func (m *Lease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lease.Marshal(b, m, deterministic)
}
func (m *Lease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lease.Merge(m, src)
}
func (m *Lease) XXX_Size() int {
	return xxx_messageInfo_Lease.Size(m)
}
func (m *Lease) XXX_DiscardUnknown() {
	xxx_messageInfo_Lease.DiscardUnknown(m)
}

var xxx_messageInfo_Lease proto.InternalMessageInfo

func (m *Lease) GetIpRange() string {
	if m != nil {
		return m.IpRange
	}
	return ""
}

func (m *Lease) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Lease) GetExpires() int64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func (m *Lease) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Lease) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Lease) GetExpired() bool {
	if m != nil {
		return m.Expired
	}
	return false
}

type AcquireLeaseResponse struct {
	Lease                *Lease   `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireLeaseResponse) Reset()         { *m = AcquireLeaseResponse{} }
func (m *AcquireLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireLeaseResponse) ProtoMessage()    {}
func (*AcquireLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *AcquireLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireLeaseResponse.Unmarshal(m, b)
}
func (m *AcquireLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireLeaseResponse.Marshal(b, m, deterministic)
}
func (m *AcquireLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireLeaseResponse.Merge(m, src)
}
func (m *AcquireLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireLeaseResponse.Size(m)
}
func (m *AcquireLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireLeaseResponse proto.InternalMessageInfo

func (m *AcquireLeaseResponse) GetLease() *Lease {
	if m != nil {
		return m.Lease
	}
	return nil
}

type GetLeaseRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeaseRequest) Reset()         { *m = GetLeaseRequest{} }
func (m *GetLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeaseRequest) ProtoMessage()    {}
func (*GetLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *GetLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaseRequest.Unmarshal(m, b)
}
func (m *GetLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaseRequest.Marshal(b, m, deterministic)
}
func (m *GetLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaseRequest.Merge(m, src)
}
func (m *GetLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeaseRequest.Size(m)
}
func (m *GetLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaseRequest proto.InternalMessageInfo

func (m *GetLeaseRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetLeaseResponse struct {
	Lease                *Lease   `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeaseResponse) Reset()         { *m = GetLeaseResponse{} }
func (m *GetLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*GetLeaseResponse) ProtoMessage()    {}
func (*GetLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *GetLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaseResponse.Unmarshal(m, b)
}
func (m *GetLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaseResponse.Marshal(b, m, deterministic)
}
func (m *GetLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaseResponse.Merge(m, src)
}
func (m *GetLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_GetLeaseResponse.Size(m)
}
func (m *GetLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaseResponse proto.InternalMessageInfo

func (m *GetLeaseResponse) GetLease() *Lease {
	if m != nil {
		return m.Lease
	}
	return nil
}

type ListLeasesResponse struct {
	Leases               []*Lease `protobuf:"bytes,1,rep,name=leases,proto3" json:"leases,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLeasesResponse) Reset()         { *m = ListLeasesResponse{} }
func (m *ListLeasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLeasesResponse) ProtoMessage()    {}
func (*ListLeasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *ListLeasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLeasesResponse.Unmarshal(m, b)
}
func (m *ListLeasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLeasesResponse.Marshal(b, m, deterministic)
}
func (m *ListLeasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLeasesResponse.Merge(m, src)
}
func (m *ListLeasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLeasesResponse.Size(m)
}
func (m *ListLeasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLeasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLeasesResponse proto.InternalMessageInfo

func (m *ListLeasesResponse) GetLeases() []*Lease {
	if m != nil {
		return m.Leases
	}
	return nil
}

type ConfigurationRequest struct {
	// Name of the network we want to get the configuration for
	NetworkName          string   `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigurationRequest) Reset()         { *m = ConfigurationRequest{} }
func (m *ConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigurationRequest) ProtoMessage()    {}
func (*ConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *ConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigurationRequest.Unmarshal(m, b)
}
func (m *ConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *ConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigurationRequest.Merge(m, src)
}
func (m *ConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigurationRequest.Size(m)
}
func (m *ConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigurationRequest proto.InternalMessageInfo

func (m *ConfigurationRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

type ConfigurationResponse struct {
	Network              *NetworkDefinition `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ConfigurationResponse) Reset()         { *m = ConfigurationResponse{} }
func (m *ConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigurationResponse) ProtoMessage()    {}
func (*ConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *ConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigurationResponse.Unmarshal(m, b)
}
func (m *ConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *ConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigurationResponse.Merge(m, src)
}
func (m *ConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigurationResponse.Size(m)
}
func (m *ConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigurationResponse proto.InternalMessageInfo

func (m *ConfigurationResponse) GetNetwork() *NetworkDefinition {
	if m != nil {
		return m.Network
	}
	return nil
}

func init() {
	proto.RegisterType((*ListNetworksResponse)(nil), "proto.ListNetworksResponse")
	proto.RegisterType((*GetNetworkRequest)(nil), "proto.GetNetworkRequest")
	proto.RegisterType((*GetNetworkResponse)(nil), "proto.GetNetworkResponse")
	proto.RegisterType((*DeleteNetworkRequest)(nil), "proto.DeleteNetworkRequest")
	proto.RegisterType((*DeleteNetworkResponse)(nil), "proto.DeleteNetworkResponse")
	proto.RegisterType((*DeleteLeaseRequest)(nil), "proto.DeleteLeaseRequest")
	proto.RegisterType((*DeleteLeaseResponse)(nil), "proto.DeleteLeaseResponse")
	proto.RegisterType((*Network)(nil), "proto.Network")
	proto.RegisterType((*CreateNetworkRequest)(nil), "proto.CreateNetworkRequest")
	proto.RegisterType((*CreateNetworkResponse)(nil), "proto.CreateNetworkResponse")
	proto.RegisterType((*PublicPeer)(nil), "proto.PublicPeer")
	proto.RegisterType((*Endpoint)(nil), "proto.Endpoint")
	proto.RegisterType((*NetworkDefinition)(nil), "proto.NetworkDefinition")
	proto.RegisterType((*AcquireLeaseRequest)(nil), "proto.AcquireLeaseRequest")
	proto.RegisterType((*RenewLeaseRequest)(nil), "proto.RenewLeaseRequest")
	proto.RegisterType((*RenewLeaseResponse)(nil), "proto.RenewLeaseResponse")
	proto.RegisterType((*Lease)(nil), "proto.Lease")
	proto.RegisterType((*AcquireLeaseResponse)(nil), "proto.AcquireLeaseResponse")
	proto.RegisterType((*GetLeaseRequest)(nil), "proto.GetLeaseRequest")
	proto.RegisterType((*GetLeaseResponse)(nil), "proto.GetLeaseResponse")
	proto.RegisterType((*ListLeasesResponse)(nil), "proto.ListLeasesResponse")
	proto.RegisterType((*ConfigurationRequest)(nil), "proto.ConfigurationRequest")
	proto.RegisterType((*ConfigurationResponse)(nil), "proto.ConfigurationResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 842 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5b, 0x4f, 0xdb, 0x48,
	0x14, 0xb6, 0x37, 0xf7, 0x93, 0xb0, 0xc0, 0x10, 0xd8, 0x24, 0xec, 0x6a, 0xb3, 0xa3, 0x45, 0x9b,
	0xa5, 0x6a, 0x90, 0x52, 0xa9, 0x6a, 0xa9, 0xda, 0x8a, 0xbb, 0x2a, 0x22, 0x44, 0xcd, 0x43, 0xa5,
	0x3e, 0x34, 0x32, 0xf1, 0x21, 0xb5, 0x48, 0x6c, 0x33, 0xb6, 0x4b, 0xf9, 0x2d, 0x7d, 0xec, 0x4b,
	0x7f, 0x66, 0x65, 0xcf, 0x8c, 0x6f, 0x31, 0x85, 0x3c, 0x25, 0x73, 0xce, 0xe7, 0x73, 0xf9, 0xe6,
	0x9b, 0x73, 0xa0, 0xa6, 0x3b, 0x66, 0xdf, 0x61, 0xb6, 0x67, 0x93, 0x52, 0xf8, 0xd3, 0xd9, 0x9c,
	0xd8, 0xf6, 0x64, 0x8a, 0x3b, 0xe1, 0xe9, 0xd2, 0xbf, 0xda, 0xc1, 0x99, 0xe3, 0xdd, 0x71, 0x0c,
	0xdd, 0x87, 0xe6, 0xd0, 0x74, 0xbd, 0x33, 0xf4, 0x6e, 0x6d, 0x76, 0xed, 0x6a, 0xe8, 0x3a, 0xb6,
	0xe5, 0x22, 0xd9, 0x86, 0xaa, 0x25, 0x6c, 0x2d, 0xb5, 0x5b, 0xe8, 0xd5, 0x07, 0xbf, 0xf3, 0x2f,
	0xfa, 0x02, 0xaa, 0x45, 0x7e, 0xfa, 0x1f, 0xac, 0x9e, 0xa0, 0x0c, 0xa1, 0xe1, 0x8d, 0x8f, 0xae,
	0x47, 0x08, 0x14, 0x2d, 0x7d, 0x86, 0x2d, 0xb5, 0xab, 0xf6, 0x6a, 0x5a, 0xf8, 0x9f, 0xbe, 0x01,
	0x92, 0x04, 0x8a, 0x54, 0x3d, 0xa8, 0x88, 0x50, 0x21, 0x78, 0x3e, 0x93, 0x74, 0xd3, 0x6d, 0x68,
	0x1e, 0xe2, 0x14, 0x3d, 0x7c, 0x44, 0xae, 0x27, 0xb0, 0x9e, 0xc1, 0x8a, 0x74, 0x79, 0xe0, 0x1e,
	0x10, 0x0e, 0x1e, 0xa2, 0xee, 0x62, 0x22, 0xac, 0xef, 0x9b, 0x86, 0x44, 0x06, 0xff, 0xe9, 0xff,
	0xb0, 0x96, 0x42, 0xc6, 0x41, 0xe7, 0xa0, 0x0c, 0x2a, 0x22, 0x77, 0x5e, 0x4e, 0xd2, 0x82, 0x8a,
	0x6e, 0x18, 0x0c, 0x5d, 0xb7, 0xf5, 0x5b, 0x68, 0x96, 0xc7, 0xc0, 0xe3, 0xfa, 0x97, 0x16, 0x7a,
	0x6e, 0xab, 0xd0, 0x2d, 0x04, 0x1e, 0x71, 0x24, 0x7f, 0x43, 0xdd, 0xf2, 0x67, 0x23, 0xe9, 0x2d,
	0x76, 0xd5, 0x5e, 0x49, 0x03, 0xcb, 0x9f, 0x5d, 0x70, 0x0b, 0xfd, 0x04, 0xcd, 0x03, 0x86, 0xfa,
	0x63, 0x18, 0x7a, 0x6c, 0x01, 0x41, 0x0a, 0x79, 0xa4, 0x7b, 0xb0, 0x9e, 0x89, 0xbf, 0xf0, 0x25,
	0xee, 0x02, 0x9c, 0xfb, 0x97, 0x53, 0x73, 0x7c, 0x8e, 0xc8, 0x92, 0x45, 0xa8, 0xe9, 0x22, 0x08,
	0x14, 0x1d, 0x9b, 0x79, 0x61, 0x6d, 0x25, 0x2d, 0xfc, 0x4f, 0xa7, 0x50, 0x3d, 0xb2, 0x0c, 0xc7,
	0x36, 0x2d, 0x8f, 0x6c, 0x41, 0xd1, 0x41, 0x64, 0x22, 0xdd, 0xaa, 0x48, 0x17, 0x87, 0xd6, 0x42,
	0x37, 0xf9, 0x0b, 0xc0, 0x09, 0x6d, 0xa3, 0x6b, 0xbc, 0x13, 0x8d, 0xd6, 0xb8, 0xe5, 0x14, 0xef,
	0x48, 0x27, 0xa1, 0x73, 0x4e, 0x76, 0xac, 0x6b, 0x07, 0x56, 0x45, 0xf5, 0x87, 0x78, 0x65, 0x5a,
	0xa6, 0x67, 0xda, 0xd6, 0x82, 0x4c, 0x3e, 0x85, 0x1a, 0x8a, 0x82, 0x79, 0xfc, 0xfa, 0x60, 0x59,
	0x54, 0x2a, 0x1b, 0xd1, 0x62, 0x04, 0xfd, 0xa6, 0xc2, 0xda, 0xde, 0xf8, 0xc6, 0x37, 0x59, 0x5a,
	0x89, 0x9b, 0x50, 0xb3, 0x6c, 0x03, 0x47, 0x89, 0xcc, 0xd5, 0xc0, 0x70, 0x16, 0x64, 0xff, 0x07,
	0x1a, 0xa2, 0x64, 0xee, 0xe7, 0x25, 0xd4, 0x85, 0x2d, 0x84, 0xa4, 0x49, 0x28, 0x64, 0x49, 0x90,
	0x54, 0x16, 0x7f, 0x49, 0x65, 0xf0, 0xce, 0x35, 0xb4, 0xf0, 0xf6, 0xc1, 0x47, 0xf2, 0x02, 0x48,
	0x12, 0x28, 0x24, 0x42, 0xa1, 0x34, 0x0d, 0x0c, 0xe2, 0xc6, 0x1a, 0x22, 0x0d, 0x07, 0x71, 0x17,
	0xfd, 0xae, 0x42, 0x29, 0x34, 0x90, 0x36, 0x54, 0x4d, 0x67, 0xc4, 0x74, 0x6b, 0x22, 0x3b, 0xae,
	0x98, 0x8e, 0x16, 0x1c, 0x03, 0xba, 0xa5, 0xd6, 0x04, 0xdd, 0xe2, 0x18, 0x78, 0xf0, 0xab, 0x63,
	0x32, 0xe4, 0xc2, 0x2d, 0x68, 0xf2, 0x18, 0x95, 0x59, 0x8c, 0xcb, 0xcc, 0xb0, 0x52, 0xca, 0xb2,
	0x12, 0x05, 0x33, 0x5a, 0xe5, 0xae, 0xda, 0xab, 0xca, 0x60, 0x06, 0xdd, 0x85, 0x66, 0xfa, 0x96,
	0x16, 0xe8, 0x70, 0x0b, 0x96, 0x4f, 0xd0, 0x7b, 0x90, 0xc2, 0xe7, 0xb0, 0x12, 0xc3, 0x16, 0x08,
	0xbf, 0x0b, 0x24, 0x98, 0xe7, 0xa1, 0x2d, 0x9e, 0xe6, 0xff, 0x42, 0x39, 0x74, 0xcb, 0x59, 0x9e,
	0xfe, 0x54, 0xf8, 0xe8, 0x4b, 0x68, 0x1e, 0xd8, 0xd6, 0x95, 0x39, 0xf1, 0x99, 0x1e, 0x68, 0x5d,
	0xd6, 0x97, 0x15, 0x98, 0x3a, 0x27, 0x30, 0x7a, 0x0a, 0xeb, 0x99, 0x4f, 0x45, 0xe6, 0x41, 0x76,
	0x2e, 0xb4, 0xd2, 0x73, 0x21, 0x7e, 0x59, 0xd1, 0x2d, 0x0e, 0x7e, 0x94, 0x61, 0xe5, 0x83, 0xc9,
	0x70, 0xe2, 0xeb, 0xcc, 0xb8, 0x40, 0xf6, 0xc5, 0x1c, 0x23, 0x19, 0xc2, 0x52, 0x6a, 0xf2, 0x90,
	0x4d, 0x11, 0x28, 0x6f, 0xde, 0x75, 0xfe, 0xcc, 0x77, 0xf2, 0xa2, 0xa8, 0x42, 0x8e, 0xa0, 0x91,
	0x5c, 0x7b, 0x64, 0xa3, 0xcf, 0x97, 0x64, 0x5f, 0x2e, 0xc9, 0xfe, 0x51, 0xb0, 0x24, 0x3b, 0x32,
	0x49, 0xde, 0x8e, 0xa4, 0x0a, 0x39, 0x00, 0x88, 0x17, 0x1a, 0x91, 0xad, 0xcd, 0x2d, 0xc3, 0x4e,
	0x3b, 0xc7, 0x13, 0x05, 0x19, 0xc2, 0x52, 0x6a, 0x53, 0x45, 0x9d, 0xe5, 0xed, 0xba, 0xa8, 0xb3,
	0xdc, 0xe5, 0x46, 0x15, 0xf2, 0x0e, 0x1a, 0x49, 0x6d, 0x92, 0x8e, 0xc0, 0xe7, 0x8c, 0x95, 0xa8,
	0xbb, 0x3c, 0x31, 0x53, 0x85, 0xec, 0x01, 0xc4, 0x5a, 0xba, 0x97, 0xa2, 0x76, 0x82, 0xa2, 0xb4,
	0xec, 0xa8, 0x42, 0x5e, 0x43, 0x55, 0xca, 0x98, 0x6c, 0xc4, 0x24, 0xa4, 0xaa, 0xf8, 0x63, 0xce,
	0x1e, 0x7d, 0x7e, 0x0c, 0xf5, 0xc4, 0xb6, 0x25, 0xed, 0x54, 0xef, 0xa9, 0x20, 0x9d, 0x3c, 0x57,
	0xf2, 0x9e, 0xe2, 0x81, 0x14, 0xdd, 0xd3, 0xdc, 0x30, 0x8b, 0x7a, 0x99, 0x9f, 0x5e, 0x54, 0x21,
	0x6f, 0xa1, 0x7e, 0xee, 0xb3, 0x09, 0x3e, 0xc0, 0xc7, 0x3d, 0x76, 0xaa, 0x90, 0xf7, 0x40, 0x8e,
	0xd1, 0x1b, 0x7f, 0x4e, 0xbd, 0x94, 0x58, 0xc7, 0x39, 0x4f, 0x2f, 0xd6, 0x71, 0xde, 0xe3, 0xa2,
	0xca, 0x7e, 0xed, 0x63, 0xa5, 0xff, 0x8a, 0x27, 0x2a, 0x87, 0x3f, 0xcf, 0x7e, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x3f, 0xd8, 0xb4, 0x85, 0x01, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WireguardServiceClient is the client API for WireguardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WireguardServiceClient interface {
	CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error)
	ListNetworks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListNetworksResponse, error)
	GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error)
	DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*DeleteNetworkResponse, error)
	AcquireLease(ctx context.Context, in *AcquireLeaseRequest, opts ...grpc.CallOption) (*AcquireLeaseResponse, error)
	ListLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListLeasesResponse, error)
	GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error)
	DeleteLease(ctx context.Context, in *DeleteLeaseRequest, opts ...grpc.CallOption) (*DeleteLeaseResponse, error)
	RenewLease(ctx context.Context, in *RenewLeaseRequest, opts ...grpc.CallOption) (*RenewLeaseResponse, error)
	PurgeLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	FetchConfiguration(ctx context.Context, in *ConfigurationRequest, opts ...grpc.CallOption) (*ConfigurationResponse, error)
}

type wireguardServiceClient struct {
	cc *grpc.ClientConn
}

func NewWireguardServiceClient(cc *grpc.ClientConn) WireguardServiceClient {
	return &wireguardServiceClient{cc}
}

func (c *wireguardServiceClient) CreateNetwork(ctx context.Context, in *CreateNetworkRequest, opts ...grpc.CallOption) (*CreateNetworkResponse, error) {
	out := new(CreateNetworkResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/CreateNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) ListNetworks(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListNetworksResponse, error) {
	out := new(ListNetworksResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*GetNetworkResponse, error) {
	out := new(GetNetworkResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/GetNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*DeleteNetworkResponse, error) {
	out := new(DeleteNetworkResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/DeleteNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) AcquireLease(ctx context.Context, in *AcquireLeaseRequest, opts ...grpc.CallOption) (*AcquireLeaseResponse, error) {
	out := new(AcquireLeaseResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/AcquireLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) ListLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListLeasesResponse, error) {
	out := new(ListLeasesResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/ListLeases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error) {
	out := new(GetLeaseResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/GetLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) DeleteLease(ctx context.Context, in *DeleteLeaseRequest, opts ...grpc.CallOption) (*DeleteLeaseResponse, error) {
	out := new(DeleteLeaseResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/DeleteLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) RenewLease(ctx context.Context, in *RenewLeaseRequest, opts ...grpc.CallOption) (*RenewLeaseResponse, error) {
	out := new(RenewLeaseResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/RenewLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) PurgeLeases(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/PurgeLeases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardServiceClient) FetchConfiguration(ctx context.Context, in *ConfigurationRequest, opts ...grpc.CallOption) (*ConfigurationResponse, error) {
	out := new(ConfigurationResponse)
	err := c.cc.Invoke(ctx, "/proto.WireguardService/FetchConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WireguardServiceServer is the server API for WireguardService service.
type WireguardServiceServer interface {
	CreateNetwork(context.Context, *CreateNetworkRequest) (*CreateNetworkResponse, error)
	ListNetworks(context.Context, *empty.Empty) (*ListNetworksResponse, error)
	GetNetwork(context.Context, *GetNetworkRequest) (*GetNetworkResponse, error)
	DeleteNetwork(context.Context, *DeleteNetworkRequest) (*DeleteNetworkResponse, error)
	AcquireLease(context.Context, *AcquireLeaseRequest) (*AcquireLeaseResponse, error)
	ListLeases(context.Context, *empty.Empty) (*ListLeasesResponse, error)
	GetLease(context.Context, *GetLeaseRequest) (*GetLeaseResponse, error)
	DeleteLease(context.Context, *DeleteLeaseRequest) (*DeleteLeaseResponse, error)
	RenewLease(context.Context, *RenewLeaseRequest) (*RenewLeaseResponse, error)
	PurgeLeases(context.Context, *empty.Empty) (*empty.Empty, error)
	FetchConfiguration(context.Context, *ConfigurationRequest) (*ConfigurationResponse, error)
}

// UnimplementedWireguardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWireguardServiceServer struct {
}

func (*UnimplementedWireguardServiceServer) CreateNetwork(ctx context.Context, req *CreateNetworkRequest) (*CreateNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNetwork not implemented")
}
func (*UnimplementedWireguardServiceServer) ListNetworks(ctx context.Context, req *empty.Empty) (*ListNetworksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNetworks not implemented")
}
func (*UnimplementedWireguardServiceServer) GetNetwork(ctx context.Context, req *GetNetworkRequest) (*GetNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNetwork not implemented")
}
func (*UnimplementedWireguardServiceServer) DeleteNetwork(ctx context.Context, req *DeleteNetworkRequest) (*DeleteNetworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNetwork not implemented")
}
func (*UnimplementedWireguardServiceServer) AcquireLease(ctx context.Context, req *AcquireLeaseRequest) (*AcquireLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireLease not implemented")
}
func (*UnimplementedWireguardServiceServer) ListLeases(ctx context.Context, req *empty.Empty) (*ListLeasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLeases not implemented")
}
func (*UnimplementedWireguardServiceServer) GetLease(ctx context.Context, req *GetLeaseRequest) (*GetLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLease not implemented")
}
func (*UnimplementedWireguardServiceServer) DeleteLease(ctx context.Context, req *DeleteLeaseRequest) (*DeleteLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLease not implemented")
}
func (*UnimplementedWireguardServiceServer) RenewLease(ctx context.Context, req *RenewLeaseRequest) (*RenewLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewLease not implemented")
}
func (*UnimplementedWireguardServiceServer) PurgeLeases(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurgeLeases not implemented")
}
func (*UnimplementedWireguardServiceServer) FetchConfiguration(ctx context.Context, req *ConfigurationRequest) (*ConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchConfiguration not implemented")
}

func RegisterWireguardServiceServer(s *grpc.Server, srv WireguardServiceServer) {
	s.RegisterService(&_WireguardService_serviceDesc, srv)
}

func _WireguardService_CreateNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).CreateNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/CreateNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).CreateNetwork(ctx, req.(*CreateNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).ListNetworks(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_GetNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).GetNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/GetNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).GetNetwork(ctx, req.(*GetNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_DeleteNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).DeleteNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/DeleteNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).DeleteNetwork(ctx, req.(*DeleteNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_AcquireLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).AcquireLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/AcquireLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).AcquireLease(ctx, req.(*AcquireLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_ListLeases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).ListLeases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/ListLeases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).ListLeases(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_GetLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).GetLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/GetLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).GetLease(ctx, req.(*GetLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_DeleteLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).DeleteLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/DeleteLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).DeleteLease(ctx, req.(*DeleteLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_RenewLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).RenewLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/RenewLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).RenewLease(ctx, req.(*RenewLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_PurgeLeases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).PurgeLeases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/PurgeLeases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).PurgeLeases(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardService_FetchConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardServiceServer).FetchConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.WireguardService/FetchConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardServiceServer).FetchConfiguration(ctx, req.(*ConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WireguardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.WireguardService",
	HandlerType: (*WireguardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNetwork",
			Handler:    _WireguardService_CreateNetwork_Handler,
		},
		{
			MethodName: "ListNetworks",
			Handler:    _WireguardService_ListNetworks_Handler,
		},
		{
			MethodName: "GetNetwork",
			Handler:    _WireguardService_GetNetwork_Handler,
		},
		{
			MethodName: "DeleteNetwork",
			Handler:    _WireguardService_DeleteNetwork_Handler,
		},
		{
			MethodName: "AcquireLease",
			Handler:    _WireguardService_AcquireLease_Handler,
		},
		{
			MethodName: "ListLeases",
			Handler:    _WireguardService_ListLeases_Handler,
		},
		{
			MethodName: "GetLease",
			Handler:    _WireguardService_GetLease_Handler,
		},
		{
			MethodName: "DeleteLease",
			Handler:    _WireguardService_DeleteLease_Handler,
		},
		{
			MethodName: "RenewLease",
			Handler:    _WireguardService_RenewLease_Handler,
		},
		{
			MethodName: "PurgeLeases",
			Handler:    _WireguardService_PurgeLeases_Handler,
		},
		{
			MethodName: "FetchConfiguration",
			Handler:    _WireguardService_FetchConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
